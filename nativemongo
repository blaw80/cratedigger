
/* native mongo:
// Connection URL

var url = "mongodb://"+process.env.IP+":27017/data/musicdb";

var insertDocuments = function(db, callback) {
  // Get the musiccollection
  var collection = db.collection('documents');
  // Insert some documents
  collection.insert([
    {a : 1}, {a : 2}, {a : 3}
  ], function(err, result) {
    assert.equal(err, null);
    assert.equal(3, result.result.n);
    assert.equal(3, result.ops.length);
    console.log("Inserted 3 documents into the document collection");
    callback(result);
  });
};

var updateDocument = function(db, callback) {
  // Get the documents collection
  var collection = db.collection('documents');
  // Update document where a is 2, set b equal to 1
  collection.update({ a : 2 }
    , { $set: { b : 1 } }, function(err, result) {
    assert.equal(err, null);
    assert.equal(1, result.result.n);
    console.log("Updated the document with the field a equal to 2");
    callback(result);
  });  
};

var removeDocument = function(db, callback) {
  // Get the documents collection
  var collection = db.collection('documents');
  // Insert some documents
  collection.remove({ a : 3 }, function(err, result) {
    assert.equal(err, null);
    assert.equal(1, result.result.n);
    console.log("Removed the document with the field a equal to 3");
    callback(result);
  });    
};

var findDocuments = function(db, callback) {
  // Get the documents collection
  var collection = db.collection('musiccollection');
  // Find some documents
  collection.find({}).toArray(function(err, docs) {
    assert.equal(err, null);
  //  assert.equal(2, docs.length);
    console.log("Found the following records");
    console.dir(docs);
    callback(docs);
  });      
};

// Use connect method to connect to the Server
MongoClient.connect(url, function(err, db) {
  assert.equal(null, err);
  console.log("Connected correctly to server");
  findDocuments(db, function() {
    db.close();
  });
});

*/

/*fetch all the document in the collection and return them as an array of items
  musiclib.find().toArray(function(err, items) {
      if (err){console.dir(err)};
  });*/
//stream entire collection
/*var stream = musiclib.find({mykey:{$ne:2}}).stream();
stream.on("data", function(item) {});
stream.on("end", function() {});
*/

